"use strict";(self.webpackChunkmyblog_2_0=self.webpackChunkmyblog_2_0||[]).push([[921],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>f});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),p=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},s=function(e){var n=p(e.components);return r.createElement(c.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),u=p(t),g=a,f=u["".concat(c,".").concat(g)]||u[g]||m[g]||o;return t?r.createElement(f,l(l({ref:n},s),{},{components:t})):r.createElement(f,l({ref:n},s))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=g;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i[u]="string"==typeof e?e:a,l[1]=i;for(var p=2;p<o;p++)l[p]=t[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},7026:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var r=t(7462),a=(t(7294),t(3905));const o={title:"Vagrant \uc5d0\uc11c \uba54\ubaa8\ub9ac CPU \ucf54\uc5b4\uc218 \uc870\uc815",date:new Date("2019-05-15T16:19:54.000Z"),tags:["vagrant","server","linux","virsualbox"]},l=void 0,i={permalink:"/blog/blog/Vagrant-\uc5d0\uc11c-\uba54\ubaa8\ub9ac-CPU-\ucf54\uc5b4\uc218-\uc870\uc815",source:"@site/blog/Vagrant-\uc5d0\uc11c-\uba54\ubaa8\ub9ac-CPU-\ucf54\uc5b4\uc218-\uc870\uc815.mdx",title:"Vagrant \uc5d0\uc11c \uba54\ubaa8\ub9ac CPU \ucf54\uc5b4\uc218 \uc870\uc815",description:"\uba54\ubaa8\ub9ac \ud560\ub2f9\uc744 \uc124\uc815\uc2dc Vagrantfile \uc5d0\uc11c \ub2e4\uc74c \ud56d\ubaa9\uc744 \ucd94\uac00\ud55c\ub2e4.",date:"2019-05-15T16:19:54.000Z",formattedDate:"2019\ub144 5\uc6d4 15\uc77c",tags:[{label:"vagrant",permalink:"/blog/blog/tags/vagrant"},{label:"server",permalink:"/blog/blog/tags/server"},{label:"linux",permalink:"/blog/blog/tags/linux"},{label:"virsualbox",permalink:"/blog/blog/tags/virsualbox"}],readingTime:.64,hasTruncateMarker:!1,authors:[],frontMatter:{title:"Vagrant \uc5d0\uc11c \uba54\ubaa8\ub9ac CPU \ucf54\uc5b4\uc218 \uc870\uc815",date:"2019-05-15T16:19:54.000Z",tags:["vagrant","server","linux","virsualbox"]},prevItem:{title:"revealjs \uc5d0\uc11c pdf \ucd9c\ub825",permalink:"/blog/blog/revealjs-\uc5d0\uc11c-pdf-\ucd9c\ub825"},nextItem:{title:"pip - locale.Error: unsupported locale setting",permalink:"/blog/blog/pip-locale-Error-unsupported-locale-setting"}},c={authorsImageUrls:[]},p=[],s={toc:p},u="wrapper";function m(e){let{components:n,...t}=e;return(0,a.kt)(u,(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"\uba54\ubaa8\ub9ac \ud560\ub2f9\uc744 \uc124\uc815\uc2dc Vagrantfile \uc5d0\uc11c \ub2e4\uc74c \ud56d\ubaa9\uc744 \ucd94\uac00\ud55c\ub2e4."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'config.vm.customize ["modifyvm", :id, "--memory", 2048]\n\n')),(0,a.kt)("p",null,"\uc544\ub2c8\uba74 CPU \uc124\uc815\uc2dc \ub2e4\uc74c \ud56d\ubaa9\uc744 \uc218\uc815\ud55c\ub2e4."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'config.vm.customize ["modifyvm", :id, "--cpus", 2]\n\n')),(0,a.kt)("p",null,"Vagrantfile \uc608\uc2dc"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ruby"},'# -*- mode: ruby -*-\n# vi: set ft=ruby :\n\nhosts = {\n  "n1" => "192.168.77.10",\n  "n2" => "192.168.77.11",\n  "n3" => "192.168.77.12",\n  "n4" => "192.168.77.13",\n}\n\nVagrant.configure("2") do |config|\n\n  config.ssh.insert_key     = false\n  config.ssh.forward_agent  = true\n  check_guest_additions     = false\n  functional_vboxsf         = false\n\n  config.vm.box = "bento/ubuntu-16.04"\n\n  hosts.each do |name, ip|\n    config.vm.define name do |machine|\n      machine.vm.network :private_network, ip: ip\n      machine.vm.provider "virtualbox" do |v|\n        v.customize ["modifyvm", :id, "--cpus", 2]\n        v.name = name\n      end\n    end\n  end\n\n\nend\n')))}m.isMDXComponent=!0}}]);