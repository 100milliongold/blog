"use strict";(self.webpackChunkmyblog_2_0=self.webpackChunkmyblog_2_0||[]).push([[7770],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>f});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),u=p(n),y=o,f=u["".concat(c,".").concat(y)]||u[y]||m[y]||a;return n?r.createElement(f,l(l({ref:t},s),{},{components:n})):r.createElement(f,l({ref:t},s))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=y;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[u]="string"==typeof e?e:o,l[1]=i;for(var p=2;p<a;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},57009:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var r=n(87462),o=(n(67294),n(3905));const a={title:"networkpolicy \uc0dd\uc131",date:new Date("2022-04-25T00:00:00.000Z"),tags:["kubernetes"],authors:["100milliongold"]},l=void 0,i={permalink:"/blog/post/networkpolicy-\uc0dd\uc131",source:"@site/blog/networkpolicy-\uc0dd\uc131.mdx",title:"networkpolicy \uc0dd\uc131",description:"",date:"2022-04-25T00:00:00.000Z",formattedDate:"2022\ub144 4\uc6d4 25\uc77c",tags:[{label:"kubernetes",permalink:"/blog/post/tags/kubernetes"}],readingTime:.315,hasTruncateMarker:!1,authors:[{name:"100milliongold",title:"developer",url:"https://sebastienlorber.com",imageURL:"https://avatars.githubusercontent.com/u/13652711?s=400&u=0a1092b8b1170f71ae883d098f8721c12ce39e9e&v=4",key:"100milliongold"}],frontMatter:{title:"networkpolicy \uc0dd\uc131",date:"2022-04-25T00:00:00.000Z",tags:["kubernetes"],authors:["100milliongold"]},prevItem:{title:"Lombok\uc744 \uc774\uc6a9\ud574 Builder \ud328\ud134\uc744 \ub9cc\ub4e4\uc5b4\ubcf4\uc790.",permalink:"/blog/post/Lombok\uc744-\uc774\uc6a9\ud574-Builder-\ud328\ud134\uc744-\ub9cc\ub4e4\uc5b4\ubcf4\uc790"},nextItem:{title:"Udemy \uc0ac\uc774\ud2b8 \uac15\uc88c \uc790\ub9c9 \ubc88\uc5ed \ubc29\ubc95",permalink:"/blog/post/Udemy-\uc0ac\uc774\ud2b8-\uac15\uc88c-\uc790\ub9c9-\ubc88\uc5ed-\ubc29\ubc95"}},c={authorsImageUrls:[void 0]},p=[],s={toc:p},u="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: internal-policy\n  namespace: default\nspec:\n  podSelector:\n    matchLabels:\n      name: internal\n  policyTypes:\n  - Egress\n  - Ingress\n  ingress:\n    - {}\n  egress:\n  - to:\n    - podSelector:\n        matchLabels:\n          name: mysql\n    ports:\n    - protocol: TCP\n      port: 3306\n\n  - to:\n    - podSelector:\n        matchLabels:\n          name: payroll\n    ports:\n    - protocol: TCP\n      port: 8080\n\n  - ports:\n    - port: 53\n      protocol: UDP\n    - port: 53\n      protocol: TCP\n")))}m.isMDXComponent=!0}}]);