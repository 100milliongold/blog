"use strict";(self.webpackChunkmyblog_2_0=self.webpackChunkmyblog_2_0||[]).push([[2559],{3905:(e,n,r)=>{r.d(n,{Zo:()=>s,kt:()=>d});var t=r(7294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function p(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=t.createContext({}),c=function(e){var n=t.useContext(i),r=n;return e&&(r="function"==typeof e?e(n):p(p({},n),e)),r},s=function(e){var n=c(e.components);return t.createElement(i.Provider,{value:n},e.children)},u="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=c(r),m=a,d=u["".concat(i,".").concat(m)]||u[m]||g[m]||o;return r?t.createElement(d,p(p({ref:n},s),{},{components:r})):t.createElement(d,p({ref:n},s))}));function d(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=r.length,p=new Array(o);p[0]=m;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l[u]="string"==typeof e?e:a,p[1]=l;for(var c=2;c<o;c++)p[c]=r[c];return t.createElement.apply(null,p)}return t.createElement.apply(null,r)}m.displayName="MDXCreateElement"},1343:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>i,contentTitle:()=>p,default:()=>g,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var t=r(7462),a=(r(7294),r(3905));const o={title:"java spark wordcount examples",date:new Date("2019-07-22T09:28:30.000Z"),tags:["server","java","spark"]},p=void 0,l={permalink:"/blog/blog/java-spark-wordcount-examples",source:"@site/blog/java-spark-wordcount-examples.mdx",title:"java spark wordcount examples",description:"- pom.xml \uc124\uc815",date:"2019-07-22T09:28:30.000Z",formattedDate:"2019\ub144 7\uc6d4 22\uc77c",tags:[{label:"server",permalink:"/blog/blog/tags/server"},{label:"java",permalink:"/blog/blog/tags/java"},{label:"spark",permalink:"/blog/blog/tags/spark"}],readingTime:.49,hasTruncateMarker:!1,authors:[],frontMatter:{title:"java spark wordcount examples",date:"2019-07-22T09:28:30.000Z",tags:["server","java","spark"]},prevItem:{title:"mecab-ko-dic \ud488\uc0ac \ud0dc\uadf8 \uc124\uba85",permalink:"/blog/blog/mecab-ko-dic-\ud488\uc0ac-\ud0dc\uadf8-\uc124\uba85"},nextItem:{title:"react proxy server \uc124\uc815",permalink:"/blog/blog/react-proxy-server-\uc124\uc815"}},i={authorsImageUrls:[]},c=[],s={toc:c},u="wrapper";function g(e){let{components:n,...r}=e;return(0,a.kt)(u,(0,t.Z)({},s,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"pom.xml \uc124\uc815"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-xml"},"<dependency>\n    <groupId>org.apache.spark</groupId>\n    <artifactId>spark-core_2.12</artifactId>\n    <version>2.4.3</version>\n</dependency>\n.\n.\n.\n<build>\n    <plugins>\n        <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-compiler-plugin</artifactId>\n            <version>2.0.2</version>\n            <configuration>\n                <source>1.8</source>\n                <target>1.8</target>\n            </configuration>\n        </plugin>\n        <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-jar-plugin</artifactId>\n            <configuration>\n                <archive>\n                    <manifest>\n                        <addClasspath>true</addClasspath>\n                        <classpathPrefix>lib/</classpathPrefix>\n                        <mainClass>com.geekcap.javaworld.sparkexample.WordCount</mainClass>\n                    </manifest>\n                </archive>\n            </configuration>\n        </plugin>\n        <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-dependency-plugin</artifactId>\n            <executions>\n                <execution>\n                    <id>copy</id>\n                    <phase>install</phase>\n                    <goals>\n                        <goal>copy-dependencies</goal>\n                    </goals>\n                    <configuration>\n                        <outputDirectory>${project.build.directory}/lib</outputDirectory>\n                    </configuration>\n                </execution>\n            </executions>\n        </plugin>\n    </plugins>\n</build>\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"java example"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-java"},'SparkConf sparkConf = new SparkConf().setMaster("local").setAppName("JD Word Counter");\nJavaSparkContext sc = new JavaSparkContext(sparkConf);\nJavaRDD<String> textFile = sc.textFile("text.txt");\nJavaPairRDD<String, Integer> counts = textFile\n    .flatMap(s -> Arrays.asList(s.split(" ")).iterator())\n    .mapToPair(word -> new Tuple2<>(word, 1))\n    .reduceByKey((a, b) -> a + b);\ncounts.saveAsTextFile("wordcouter");\n')))))}g.isMDXComponent=!0}}]);