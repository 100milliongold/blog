"use strict";(self.webpackChunkmyblog_2_0=self.webpackChunkmyblog_2_0||[]).push([[9543],{38189:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var r=t(85893),i=t(11151);const l={title:"spring boot \uc744 influxDB \uc640 \uc5f0\ub3d9\ud558\uae30",date:new Date("2019-02-10T10:14:18.000Z"),tags:["java","spring","docker","spring boot","influxDB"]},a="\uc694\uad6c\uc0ac\ud56d",o={permalink:"/blog/post/spring-boot-\uc744-influxDB-\uc640-\uc5f0\ub3d9\ud558\uae30",source:"@site/blog/spring-boot-\uc744-influxDB-\uc640-\uc5f0\ub3d9\ud558\uae30.mdx",title:"spring boot \uc744 influxDB \uc640 \uc5f0\ub3d9\ud558\uae30",description:"- spring boot : 1.5.10.RELEASE \uc774\uc0c1",date:"2019-02-10T10:14:18.000Z",formattedDate:"2019\ub144 2\uc6d4 10\uc77c",tags:[{label:"java",permalink:"/blog/post/tags/java"},{label:"spring",permalink:"/blog/post/tags/spring"},{label:"docker",permalink:"/blog/post/tags/docker"},{label:"spring boot",permalink:"/blog/post/tags/spring-boot"},{label:"influxDB",permalink:"/blog/post/tags/influx-db"}],readingTime:2.53,hasTruncateMarker:!1,authors:[],frontMatter:{title:"spring boot \uc744 influxDB \uc640 \uc5f0\ub3d9\ud558\uae30",date:"2019-02-10T10:14:18.000Z",tags:["java","spring","docker","spring boot","influxDB"]},unlisted:!1,prevItem:{title:"\uc6b0\ubd84\ud22c 18.04 \ucd5c\ub300\uc808\uc804\ubaa8\ub4dc \ud65c\uc131\ud654",permalink:"/blog/post/\uc6b0\ubd84\ud22c-18-04-\ucd5c\ub300\uc808\uc804\ubaa8\ub4dc-\ud65c\uc131\ud654"},nextItem:{title:"vagrant box \uc800\uc7a5\uc704\uce58 \uc124\uc815",permalink:"/blog/post/vagrant-box-\uc800\uc7a5\uc704\uce58-\uc124\uc815"}},s={authorsImageUrls:[]},c=[];function u(n){const e={a:"a",code:"code",h1:"h1",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"spring boot : 1.5.10.RELEASE \uc774\uc0c1"}),"\n",(0,r.jsx)(e.li,{children:"jdk : 1.8 \uc774\uc0c1"}),"\n",(0,r.jsx)(e.li,{children:"influxDB : 2.7"}),"\n"]}),"\n",(0,r.jsx)(e.h1,{id:"influxdb-\uc124\uce58",children:"influxDB \uc124\uce58"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"docker \uc5d0\uc11c \uc124\uce58"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-shell",children:"docker pull influxdb\ndocker run --name  influxdb-test -p8086:8086 -d influxdb\n"})}),"\n",(0,r.jsx)(e.h1,{id:"\uc0d8\ud50c-\ub370\uc774\ud130-\uc0dd\uc131\ud558\uae30",children:"\uc0d8\ud50c \ub370\uc774\ud130 \uc0dd\uc131\ud558\uae30"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"influxDB \uc811\uc18d"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-shell",children:"docker exec -it influxdb-test /bin/bash\ninflux -precision rfc3339\nConnected to http://localhost:8086 version 1.4.x\nInfluxDB shell 1.4.x\n"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"\ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc0dd\uc131"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-shell",children:"CREATE DATABASE NOAA_water_database\nexit\n"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"\uc0d8\ud50c \ub370\uc774\ud130 \ub2e4\uc6b4\ubc1b\uae30"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-shell",children:"curl https://s3.amazonaws.com/noaa.water-database/NOAA_data.txt -o NOAA_data.txt\n"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"\ub370\uc774\ud130\ub97c influxDB \uc5d0 import \ud558\uae30"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-shell",children:"influx -import -path=NOAA_data.txt -precision=s -database=NOAA_water_database\n"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"\ud14c\uc2a4\ud2b8 \ud558\uae30"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-shell",children:"influx -precision rfc3339\nuse NOAA_water_database\nSELECT * FROM h2o_feet LIMIT 5\n"})}),"\n",(0,r.jsx)(e.h1,{id:"spring-boot-\uc5d0-\uc5f0\ub3d9\ud558\uae30",children:"spring boot \uc5d0 \uc5f0\ub3d9\ud558\uae30"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"spring boot \ud504\ub85c\uc81d\ud2b8 \uc0dd\uc131"}),"\n",(0,r.jsx)(e.li,{children:"pom.xml \uc124\uc815"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-xml",children:'<?xml version="1.0" encoding="UTF-8"?>\n<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>org.springframework</groupId>\n    <artifactId>influxDB-Test</artifactId>\n    <version>0.1.0</version>\n\n    <parent>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-parent</artifactId>\n        <version>2.0.5.RELEASE</version>\n    </parent>\n\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>org.influxdb</groupId>\n            <artifactId>influxdb-java</artifactId>\n            <version>2.14</version>\n        </dependency>\n\n        <dependency>\n            <groupId>com.github.miwurster</groupId>\n            <artifactId>spring-data-influxdb</artifactId>\n            <version>1.8</version>\n        </dependency>\n\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-test</artifactId>\n            <scope>test</scope>\n        </dependency>\n    </dependencies>\n\n    <properties>\n        <java.version>1.8</java.version>\n    </properties>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n            </plugin>\n        </plugins>\n    </build>\n\n</project>\n'})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"spring configure \uc124\uc815 (InfluxDBConfiguration.java)"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-java",children:"@Configuration\n@EnableConfigurationProperties(InfluxDBProperties.class)\npublic class InfluxDBConfiguration\n{\n  @Bean\n  public InfluxDBConnectionFactory connectionFactory(final InfluxDBProperties properties)\n  {\n    return new InfluxDBConnectionFactory(properties);\n  }\n\n  @Bean\n  public InfluxDBTemplate<Point> influxDBTemplate(final InfluxDBConnectionFactory connectionFactory)\n  {\n    /*\n     * You can use your own 'PointCollectionConverter' implementation, e.g. in case\n     * you want to use your own custom measurement object.\n     */\n    return new InfluxDBTemplate<>(connectionFactory, new PointConverter());\n  }\n\n  @Bean\n  public DefaultInfluxDBTemplate defaultTemplate(final InfluxDBConnectionFactory connectionFactory)\n  {\n    /*\n     * If you are just dealing with Point objects from 'influxdb-java' you could\n     * also use an instance of class DefaultInfluxDBTemplate.\n     */\n    return new DefaultInfluxDBTemplate(connectionFactory);\n  }\n}\n"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"application.properties \uc124\uc815"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-properties",children:"spring.influxdb.url=http://localhost:8086\nspring.influxdb.database=NOAA_water_database\nspring.influxdb.username=~\nspring.influxdb.retentionPolicy=autogen\n"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"DTO \uc0dd\uc131(H2oFeet.java)"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-java",children:'@Measurement(name = "h2o_feet")\npublic class H2oFeet {\n\t@Column(name = "water_level")\n\tprivate Double water_level;\n\t@Column(name = "level description")\n\tprivate String level_description;\n\t@Column(name = "location")\n\tprivate String location;\n\t@Column(name = "time")\n\tprivate Instant time;\n\n\n\tpublic Double getWater_level() {\n\t\treturn water_level;\n\t}\n\tpublic void setWater_level(Double water_level) {\n\t\tthis.water_level = water_level;\n\t}\n\tpublic String getLevel_description() {\n\t\treturn level_description;\n\t}\n\tpublic void setLevel_description(String level_description) {\n\t\tthis.level_description = level_description;\n\t}\n\tpublic String getLocation() {\n\t\treturn location;\n\t}\n\tpublic void setLocation(String location) {\n\t\tthis.location = location;\n\t}\n\tpublic Instant getTime() {\n\t\treturn time;\n\t}\n\tpublic void setTime(Instant time) {\n\t\tthis.time = time;\n\t}\n}\n'})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"controller \uc0dd\uc131 (MainController.java)"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-java",children:'@Controller\n@RequestMapping(path="/api/v1/NOAAWater")\npublic class MainController {\n\n\t@Autowired\n\tprivate MainService mainService;\n\n\n\t@GetMapping(path="/h2os")\n\tpublic @ResponseBody List<H2oFeet> h2o_list() {\n\n\n\n\t\treturn mainService.h2o_list();\n\t}\n}\n'})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"service \uc0dd\uc131 (MainService.java)"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-java",children:'@Service\npublic class MainService {\n\n\t@Autowired\n\tprivate InfluxDBTemplate<Point> influxDBTemplate;\n\n\tpublic List<H2oFeet> h2o_list() {\n\t\tQuery query = QueryBuilder.newQuery("SELECT * FROM h2o_feet LIMIT 1000")\n\t\t        .forDatabase("NOAA_water_database")\n\t\t        .create();\n\n\n\t\tQueryResult queryResult = influxDBTemplate.query(query);\n\n\n\t\tInfluxDBResultMapper resultMapper = new InfluxDBResultMapper(); // thread-safe - can be reused\n\n\t\treturn resultMapper.toPOJO(queryResult, H2oFeet.class);\n\t}\n}\n'})}),"\n",(0,r.jsx)(e.h1,{id:"test",children:"Test"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"curl"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-shell",children:"$curl -X GET http://localhost:8080/api/v1/NOAAWater/h2os\n"})}),"\n",(0,r.jsxs)(e.p,{children:["github : ",(0,r.jsx)(e.a,{href:"https://github.com/gadian88/influxDB-Test",children:"https://github.com/gadian88/influxDB-Test"})]})]})}function p(n={}){const{wrapper:e}={...(0,i.a)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(u,{...n})}):u(n)}},11151:(n,e,t)=>{t.d(e,{Z:()=>o,a:()=>a});var r=t(67294);const i={},l=r.createContext(i);function a(n){const e=r.useContext(l);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:a(n.components),r.createElement(l.Provider,{value:e},n.children)}}}]);