"use strict";(self.webpackChunkmyblog_2_0=self.webpackChunkmyblog_2_0||[]).push([[3181],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),u=c(n),g=a,d=u["".concat(l,".").concat(g)]||u[g]||m[g]||o;return n?r.createElement(d,p(p({ref:t},s),{},{components:n})):r.createElement(d,p({ref:t},s))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,p=new Array(o);p[0]=g;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[u]="string"==typeof e?e:a,p[1]=i;for(var c=2;c<o;c++)p[c]=n[c];return r.createElement.apply(null,p)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},6579:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>p,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={title:"java spark wordcount examples",date:new Date("2019-07-22T09:28:30.000Z"),tags:["server","java","spark"]},p=void 0,i={permalink:"/blog/post/java-spark-wordcount-examples",source:"@site/blog/java-spark-wordcount-examples.mdx",title:"java spark wordcount examples",description:"- pom.xml \uc124\uc815",date:"2019-07-22T09:28:30.000Z",formattedDate:"2019\ub144 7\uc6d4 22\uc77c",tags:[{label:"server",permalink:"/blog/post/tags/server"},{label:"java",permalink:"/blog/post/tags/java"},{label:"spark",permalink:"/blog/post/tags/spark"}],readingTime:.49,hasTruncateMarker:!1,authors:[],frontMatter:{title:"java spark wordcount examples",date:"2019-07-22T09:28:30.000Z",tags:["server","java","spark"]},prevItem:{title:"mecab-ko-dic \ud488\uc0ac \ud0dc\uadf8 \uc124\uba85",permalink:"/blog/post/mecab-ko-dic-\ud488\uc0ac-\ud0dc\uadf8-\uc124\uba85"},nextItem:{title:"react proxy server \uc124\uc815",permalink:"/blog/post/react-proxy-server-\uc124\uc815"}},l={authorsImageUrls:[]},c=[],s={toc:c},u="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"pom.xml \uc124\uc815"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-xml"},"<dependency>\n    <groupId>org.apache.spark</groupId>\n    <artifactId>spark-core_2.12</artifactId>\n    <version>2.4.3</version>\n</dependency>\n.\n.\n.\n<build>\n    <plugins>\n        <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-compiler-plugin</artifactId>\n            <version>2.0.2</version>\n            <configuration>\n                <source>1.8</source>\n                <target>1.8</target>\n            </configuration>\n        </plugin>\n        <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-jar-plugin</artifactId>\n            <configuration>\n                <archive>\n                    <manifest>\n                        <addClasspath>true</addClasspath>\n                        <classpathPrefix>lib/</classpathPrefix>\n                        <mainClass>com.geekcap.javaworld.sparkexample.WordCount</mainClass>\n                    </manifest>\n                </archive>\n            </configuration>\n        </plugin>\n        <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-dependency-plugin</artifactId>\n            <executions>\n                <execution>\n                    <id>copy</id>\n                    <phase>install</phase>\n                    <goals>\n                        <goal>copy-dependencies</goal>\n                    </goals>\n                    <configuration>\n                        <outputDirectory>${project.build.directory}/lib</outputDirectory>\n                    </configuration>\n                </execution>\n            </executions>\n        </plugin>\n    </plugins>\n</build>\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"java example"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-java"},'SparkConf sparkConf = new SparkConf().setMaster("local").setAppName("JD Word Counter");\nJavaSparkContext sc = new JavaSparkContext(sparkConf);\nJavaRDD<String> textFile = sc.textFile("text.txt");\nJavaPairRDD<String, Integer> counts = textFile\n    .flatMap(s -> Arrays.asList(s.split(" ")).iterator())\n    .mapToPair(word -> new Tuple2<>(word, 1))\n    .reduceByKey((a, b) -> a + b);\ncounts.saveAsTextFile("wordcouter");\n')))))}m.isMDXComponent=!0}}]);