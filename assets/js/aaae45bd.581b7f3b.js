"use strict";(self.webpackChunkmyblog_2_0=self.webpackChunkmyblog_2_0||[]).push([[1976],{52592:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>l,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var r=e(85893),o=e(11151);const i={title:"Spring Security \uc5d0\uc11c \ub85c\uadf8\uc778 \ud31d\uc5c5\ucc3d \uc548\ub098\uc624\uac8c \uc124\uc815",date:new Date("2019-07-18T17:53:04.000Z"),tags:["java","spring","spring boot","spring security"]},a=void 0,s={permalink:"/blog/post/Spring-Security-\uc5d0\uc11c-\ub85c\uadf8\uc778-\ud31d\uc5c5\ucc3d-\uc548\ub098\uc624\uac8c-\uc124\uc815",source:"@site/blog/Spring-Security-\uc5d0\uc11c-\ub85c\uadf8\uc778-\ud31d\uc5c5\ucc3d-\uc548\ub098\uc624\uac8c-\uc124\uc815.mdx",title:"Spring Security \uc5d0\uc11c \ub85c\uadf8\uc778 \ud31d\uc5c5\ucc3d \uc548\ub098\uc624\uac8c \uc124\uc815",description:"- Spring Security \uc744 \uc0ac\uc6a9\ud558\uba74 \uac00\ub054\uc2dd \ub85c\uadf8\uc778 \ud31d\uc5c5\ucc3d\uc774 \ub098\uc624\ub294\ub370 \ucd9c\ub825\uc744 \ud5e4\uc81c\ud560\uc218\uac00 \uc788\ub2e4.",date:"2019-07-18T17:53:04.000Z",formattedDate:"2019\ub144 7\uc6d4 18\uc77c",tags:[{label:"java",permalink:"/blog/post/tags/java"},{label:"spring",permalink:"/blog/post/tags/spring"},{label:"spring boot",permalink:"/blog/post/tags/spring-boot"},{label:"spring security",permalink:"/blog/post/tags/spring-security"}],readingTime:.955,hasTruncateMarker:!1,authors:[],frontMatter:{title:"Spring Security \uc5d0\uc11c \ub85c\uadf8\uc778 \ud31d\uc5c5\ucc3d \uc548\ub098\uc624\uac8c \uc124\uc815",date:"2019-07-18T17:53:04.000Z",tags:["java","spring","spring boot","spring security"]},unlisted:!1,prevItem:{title:"basic auth \uad6c\ud604 \ubc0f \uc124\uba85",permalink:"/blog/post/basic-auth-\uad6c\ud604-\ubc0f-\uc124\uba85"},nextItem:{title:"java \ub79c\ub364 \ubb38\uc790\uc5f4 \uc0dd\uc131",permalink:"/blog/post/java-\ub79c\ub364-\ubb38\uc790\uc5f4-\uc0dd\uc131"}},p={authorsImageUrls:[]},c=[];function u(n){const t={code:"code",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.a)(),...n.components};return(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:"Spring Security \uc744 \uc0ac\uc6a9\ud558\uba74 \uac00\ub054\uc2dd \ub85c\uadf8\uc778 \ud31d\uc5c5\ucc3d\uc774 \ub098\uc624\ub294\ub370 \ucd9c\ub825\uc744 \ud5e4\uc81c\ud560\uc218\uac00 \uc788\ub2e4."}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:"\uc911\uc694\ud55c\uac74 NoPopupBasicAuthenticationEntryPoint.java \uc5d0\uc11c \uc81c\uc5b4\ud558\ub294 \uac83\uc774\ub2e4."}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"WebSecurityConfig.java"}),"\n"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-java",children:'package com.jeaeok.myproject.testApp.configs;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\nimport org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\nimport org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;\nimport org.springframework.security.crypto.password.PasswordEncoder;\n\n@Configuration\n/**\n* \uc2a4\ud504\ub9c1 \uc2dc\ud050\ub9ac\ud2f0 \uc124\uc815\n* @author atcis\n*\n*/\npublic class WebSecurityConfig extends WebSecurityConfigurerAdapter {\n    \n    @Autowired\n    private AuthProvider authProvider;\n    \n    \n    @Bean\n    public PasswordEncoder getEncoder() {\n        return new BCryptPasswordEncoder();\n    }\n    \n    \n    @Override\n    /**\n    * \uc2a4\ud06c\ub9c1 \uc2dc\ud050\ub9ac\ud2b8\ub97c \ud1b5\ud558\uc5ec \uc811\uadfc\ud398\uc774\uc9c0 \uc124\uc815\n    */\n    protected void configure(HttpSecurity http) throws Exception{\n        http\n        .logout()                                                                \n        .logoutUrl("/api/logout")\n        .and()\n        .csrf()\n        .disable()\n        .authorizeRequests()\n        .antMatchers(\n                "/",\n                "/api/v1/user/join",\n                "/static/**"\n        ).permitAll()\n        .anyRequest().authenticated()\n        .and()\n        .headers().frameOptions().sameOrigin()\n        .and()\n        .httpBasic()\n        .authenticationEntryPoint(new NoPopupBasicAuthenticationEntryPoint())\n        ;\n        \n        http.authenticationProvider(authProvider);\n    }\n}\n'})}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"NoPopupBasicAuthenticationEntryPoint.java"}),"\n"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-java",children:"package com.jeaeok.myproject.testApp.configs;\nimport java.io.IOException;\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport org.springframework.security.core.AuthenticationException;\nimport org.springframework.security.web.AuthenticationEntryPoint;\n\npublic class NoPopupBasicAuthenticationEntryPoint implements AuthenticationEntryPoint {\n    @Override\n    public void commence(HttpServletRequest request, HttpServletResponse response, AuthenticationException authException) throws IOException, ServletException {\n        response.sendError(HttpServletResponse.SC_UNAUTHORIZED, authException.getMessage());\n    }\n}\n"})}),"\n"]}),"\n"]})}function l(n={}){const{wrapper:t}={...(0,o.a)(),...n.components};return t?(0,r.jsx)(t,{...n,children:(0,r.jsx)(u,{...n})}):u(n)}},11151:(n,t,e)=>{e.d(t,{Z:()=>s,a:()=>a});var r=e(67294);const o={},i=r.createContext(o);function a(n){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof n?n(t):{...t,...n}}),[t,n])}function s(n){let t;return t=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:a(n.components),r.createElement(i.Provider,{value:t},n.children)}}}]);